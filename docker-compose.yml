version: '3'

services:
  api:
    image: rails-api
    build:
      target: api
      context: .
    ports:
      - 3000:3000
    depends_on:
      - mysql
      - redis
    networks:
      - backend
      - frontend
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_PROVIDER=${REDIS_PROVIDER}

  api-unit-test:
    image: rails-api-unit-test
    build:
      target: unit-test
      context: .
    depends_on:
      - mysql
      - redis
    networks:
      - backend
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_PROVIDER=${REDIS_PROVIDER}

  api-sidekiq:
    image: rails-api-sidekiq
    build:
      target: sidekiq
      context: .
    depends_on:
      - mysql
      - redis
    networks:
      - backend
    environment:
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOSTNAME=${DB_HOSTNAME}
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - REDIS_PROVIDER=${REDIS_PROVIDER}

  frontend:
    image: next-frontend
    build:
      target: frontend
      context: .
    ports:
      - 3001:3001
    depends_on:
      - api
    networks:
      - frontend

  mysql:
    image: mysql:8.0.32
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD} # you can use it on your MYSQL Client to have more flexibility (if needed)
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - backend

  redis:
    image: redis/redis-stack
    ports:
      - 6379:6379
      - 8001:8001
    networks:
      - backend

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
